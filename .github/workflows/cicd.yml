name: CI/CD Pipeline (Local Self-Hosted)

on:
  push:
    branches:
      - main

jobs:
  cicd:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: false

      - name: Clean previous build artifacts
        run: |
          rm -rf build/
          rm -rf src/main/resources/application.properties

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.1.0

      - name: Generate application.properties
        run: |
          mkdir -p src/main/resources
          cat <<EOF > src/main/resources/application-prod.properties
          ${{ secrets.APPLICATION_PROPERTIES }}
          EOF

      - name: Build with Gradle
        run: ./gradlew build

      - name: Stop existing server
        run: |
          # 기존 서버 프로세스 종료
          pkill -f "java.*matilda" || true
          sleep 3

      - name: Deploy to application directory
        run: |
          # lavatory 디렉토리가 없으면 생성
          mkdir -p /home/lavatory
          
          # 기존 jar 파일들 백업 및 제거
          if [ -d "/home/lavatory/libs" ]; then
            rm -rf /home/lavatory/libs.backup
            mv /home/lavatory/libs /home/lavatory/libs.backup
          fi
          
          # 새 빌드 파일들 복사
          cp -r build/libs /home/lavatory/
          
          # start-server.sh가 없으면 생성 (선택적)
          if [ ! -f "/home/lavatory/start-server.sh" ]; then
            cat <<EOF > /home/lavatory/start-server.sh
          #!/bin/bash
          cd /home/lavatory
          java -Dspring.profiles.active=prod -jar libs/*.jar 
          EOF
            chmod +x /home/lavatory/start-server.sh
          fi

      - name: Start server
        run: |
          cd /home/lavatory
          nohup ./start-server.sh > server.log 2>&1 &
          echo "Server starting in background..."
          
          # 서버 시작 확인
          sleep 10
          if pgrep -f "java.*matilda" > /dev/null; then
            echo "✅ Server started successfully"
          else
            echo "❌ Server failed to start"
            echo "Last 20 lines of server log:"
            tail -20 server.log || true
            exit 1
          fi

      - name: Health check (optional)
        run: |
          # 애플리케이션이 HTTP 서버라면 헬스체크 추가
          # curl -f http://localhost:8080/health || echo "Health check endpoint not available"
          echo "Deployment completed"

      - name: Cleanup
        if: always()
        run: |
          # 임시 파일 정리
          rm -rf build/
          rm -f src/main/resources/application.properties
